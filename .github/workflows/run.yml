name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
 
    
jobs:
  excel-graph:
    env:
      #input_compo: "Tlmf"
      input_compo: '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
    runs-on: windows-latest
    outputs:
      targetcompo:  ${{ steps.create_unittest_brach.outputs.targetcompo }}
      testtype:  ${{ steps.create_unittest_brach.outputs.testtype }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install xlrd xlwt openpyxl
        echo "schedule"
    - name: Generate Excel file and graph
      run: |
        #cd ./src
        #python generate_excel.py
    - name: Get Comp Test Type
      id: get_comp_test_type
      run: |
        # 実行するコンポのテスト種別を取得する
        pwd
        cd ./.github/workflows
        
        $check_flg = $false
        echo "input = ${{inputs.input_compo}}"
        pwd
        foreach ($content in Get-Content ./choices.json) {
         echo "loop"
          if ($content -like "*node_name*") {
            $node_name = $content.Substring(22, ($content.Length-24))
            echo "node_name = $node_name"
            if ($node_name -eq "${{inputs.input_node}}"){
              $check_flg = $true
              echo "check_flg = $check_flg"
            }
          } elseif ($check_flg -eq $true -and $content -like "*test_type*") {
            $testtype = $content.Substring(22, ($content.Length-23))
            echo "content = $content"
            break
          }
        }
        echo "testtype=$testtype" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
        echo "testtype=$testtype"
     #- name: Upload Excel file
     # uses: actions/upload-artifact@v3
     # with:
     #   name: excel-graph
     #   path: example.xls
    - name: Create UnitTest Branch
      id: create_unittest_brach
      run: |
       #サンプル３(全コンポ)
       targetcompo=@("Tlmf","Lcd","Bsm","DestJdg","OmiArb")
       echo "${targetcompo}"
       echo "targetcompo=${targetcompo}" >> $GITHUB_OUTPUT
   
  Exec_GTestConvTool:
    runs-on: ubuntu-latest
    needs: excel-graph
    if: ${{ needs.excel-graph.outputs.testtype }} != 'csv'
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.targetcompo )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_GTestConvTool"
          echo ${{ matrix.compolist }}

  Exec_ECU-Build:
    runs-on: ubuntu-latest
    needs: excel-graph
    if: ${{ needs.excel-graph.outputs.testtype }} == 'csv'
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.targetcompo )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_ECU-Build"
          echo ${{ matrix.compolist }}
        
