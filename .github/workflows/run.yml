name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
 
    
jobs:
  excelgraph:
    env:
      #input_compo: "Tlmf"
      input_compo: '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
    runs-on: windows-latest
    outputs:
      compo_list:  ${{ steps.create_unittest_brach.outputs.compo_list }}
      compo_testtype:  ${{ steps.create_unittest_brach.outputs.compo_testtype }}
      targetcompolist:  ${{ steps.create_unittest_brach.outputs.targetcompolist }}
    steps:
    - uses: actions/checkout@v3
    - name: Create UnitTest Branch
      id: create_unittest_brach
      run: |
       $targetcompo='["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
       #echo "${targetcompo}"
       echo "0"
       $compo_testtype = @()
       echo "1"
       foreach ($compo in ($targetcompo | ConvertFrom-Json)) {
         echo "compo=$compo"
         if ($compo -ne "Bsm"){
           $test_type = "csv"
         }else{
           $test_type = "mix"
         }
         $compo_testtype += @( @{Name = "$compo"; Type = "$test_type"})
       }
       foreach ($item in $compo_testtype) {
         echo("Name: " + $item.Name + ", Type: " + $item.Type)
       }
       echo "compo_testtype=$compo_testtype" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
       echo "compo_testtype=$compo_testtype" >> $GITHUB_ENV
       echo "compo_testtype=$compo_testtype"
       $test_type = ($compo_testtype | Where-Object { $_.Name -eq 'Bsm' }).Type
       echo "testtype=${test_type}"
       #$test_type1 = $compo_testtype['Bsm']
       #echo "testtype1=${test_type1}"

       #echo "input_compo=${env.input_compo}"
       #echo "input_compo=${{fromJson( env.input_compo )}}"

       $compo_list += "["
       echo "compo_list=$compo_list"

       foreach ($comp_info in $compo_testtype) {
          $compo_list += "`""
          $compo_list += $comp_info.Name
          $compo_list += "`""
          $compo_list += ","
       }
       $compo_list += "]"
       $compo_list = $compo_list -replace '\,]',']'
       echo "compo_list_2=$compo_list"
       echo "compo_list=$compo_list" | Out-File -Append -FilePath $env:GITHUB_OUTPUT

  Exec_GTestConvTool:
    runs-on: windows-latest
    needs: excelgraph
    strategy:
      max-parallel: 5
      matrix:
        compolist: ${{fromJson(needs.excelgraph.outputs.compo_list)}}
    steps:
    - uses: actions/checkout@v3
    - name: check
      run: |
        pwd
        dir
        cd ./src/
        $input_compo=${{ matrix.compolist }}
        $testype='csv'
        python ./test.py $input_compo $testtype
        
