name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
 
    
jobs:
  excel-graph:
    env:
      #input_compo: "Tlmf"
      input_compo: '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
    runs-on: ubuntu-latest
    outputs:
      targetcompo:  ${{ steps.create_unittest_brach.outputs.targetcompo }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install xlrd xlwt openpyxl
        echo "schedule"
    - name: Generate Excel file and graph
      run: |
        #cd ./src
        #python generate_excel.py
    - name: Install jq
      id: install_jq
      run: |
        if ( [ ! -f $HOME/bin/jq ] ); then
          mkdir -p ~/bin
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O ~/bin/jq
          chmod +x ~/bin/jq
        else
          echo "jq is already installed."
        fi
    - name: Get Comp Test Type
      id: get_comp_test_type
      run: |
        # 実行するコンポのテスト種別を取得する
        pwd
        cd ./.github/workflows
        json=`jq '.[] | select(.node_name == "${{ inputs.input_comp }}")' ./choices.json`
        echo "$json"
        testtype=`echo $json | jq .test_type`
        echo "testtype=$testtype"
        test="テストします"
        echo "test=$test"
     #- name: Upload Excel file
     # uses: actions/upload-artifact@v3
     # with:
     #   name: excel-graph
     #   path: example.xls
    - name: Create UnitTest Branch
      id: create_unittest_brach
      run: |
       #サンプル１
       echo '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]' | jq -c
       #list=$(echo '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]' | jq -c)
       #echo "targetcompo=${list}" >> $GITHUB_OUTPUT
       #サンプル２(単体コンポ)
       #targetcompo=$(echo '["${{env.input_compo}}"]' | jq -c)
       #echo "${targetcompo}"
       #echo "targetcompo=${targetcompo}" >> $GITHUB_OUTPUT
       #サンプル３(全コンポ)
       targetcompo=$(echo '${{env.input_compo}}' | jq -c)
       echo "${targetcompo}"
       echo "targetcompo=${targetcompo}" >> $GITHUB_OUTPUT
   
  Exec_GTestConvTool:
    runs-on: ubuntu-latest
    needs: excel-graph
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.targetcompo )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_GTestConvTool"
          echo ${{ matrix.compolist }}

  Exec_ECU-Build:
    runs-on: ubuntu-latest
    needs: excel-graph
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.targetcompo )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_ECU-Build"
          echo ${{ matrix.compolist }}
        
