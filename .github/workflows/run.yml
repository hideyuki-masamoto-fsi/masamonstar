name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
 
    
jobs:
  excel-graph:
    env:
      #input_compo: "Tlmf"
      input_compo: '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
    runs-on: ubuntu-latest
    outputs:
      compo_testtype:  ${{ steps.create_unittest_brach.outputs.compo_testtype }}
      #testtype:  ${{ steps.create_unittest_brach.outputs.testtype }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        pip install xlrd xlwt openpyxl
        echo "schedule"
    - name: Generate Excel file and graph
      run: |
        #cd ./src
        #python generate_excel.py
     #- name: Upload Excel file
     # uses: actions/upload-artifact@v3
     # with:
     #   name: excel-graph
     #   path: example.xls
    - name: Create UnitTest Branch
      id: create_unittest_brach
      run: |
       #サンプル１
       echo '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]' | jq -c
       #list=$(echo '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]' | jq -c)
       #echo "targetcompo=${list}" >> $GITHUB_OUTPUT
       #サンプル２(単体コンポ)
       #targetcompo=$(echo '["${{env.input_compo}}"]' | jq -c)
       #echo "${targetcompo}"
       #echo "targetcompo=${targetcompo}" >> $GITHUB_OUTPUT
       #サンプル３(全コンポ)
       targetcompo=$(echo '${{env.input_compo}}' | jq -c)
       echo "${targetcompo}"
       $compo_testtype = @()

       foreach ($compo in ($input_compo | ConvertFrom-Json)) {
         echo "compo=$compo"
         if ($compo -ne "Bsm"){
           $test_type = "csv"
         }else{
           $test_type = "mix"
         }
         $compo_testtype += @( @{Name = $compo; Type = $test_type})
       }
       foreach ($item in $compo_testtype) {
         echo("Name: " + $item.Name + ", Type: " + $item.Type)
       }
       echo "compo_testtype=${compo_testtype}" >> $GITHUB_OUTPUT

       #testtype='["csv","mix","csv","gtest","csv"]'
       #echo "testtype=${testtype}" >> $GITHUB_OUTPUT

       #echo "input_compo=${env.input_compo}"
       #echo "input_compo=${{fromJson( env.input_compo )}}"
   
  Exec_GTestConvTool:
    runs-on: ubuntu-latest
    needs: excel-graph
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.compo_testtype )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_GTestConvTool"
          echo ${ matrix.compolist }
          

  Exec_ECU-Build:
    runs-on: ubuntu-latest
    needs: excel-graph
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson( needs.excel-graph.outputs.compo_testtype )}}
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_ECU-Build"
          echo ${{ matrix.compolist }}
