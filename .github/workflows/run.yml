name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
env:
 complist: '[]'
    
jobs:
  excelgraph:
    env:
      #input_compo: "Tlmf"
      input_compo: '["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
    runs-on: windows-latest
    outputs:
      compo_list:  ${{ steps.create_unittest_brach.outputs.compo_list }}
      compo_testtype:  ${{ steps.create_unittest_brach.outputs.compo_testtype }}
      targetcompolist:  ${{ steps.create_unittest_brach.outputs.targetcompolist }}
    steps:
    - uses: actions/checkout@v3
    - name: Create UnitTest Branch
      id: create_unittest_brach
      run: |
       $targetcompo='["Tlmf","Lcd","Bsm","DestJdg","OmiArb"]'
       #echo "${targetcompo}"
       echo "0"
       $compo_testtype = @()
       echo "1"
       foreach ($compo in ($targetcompo | ConvertFrom-Json)) {
         echo "compo=$compo"
         if ($compo -ne "Bsm"){
           $test_type = "csv"
         }else{
           $test_type = "mix"
         }
         $compo_testtype += @( @{Name = "$compo"; Type = "$test_type"})
       }
       foreach ($item in $compo_testtype) {
         echo("Name: " + $item.Name + ", Type: " + $item.Type)
       }
       echo "compo_testtype=$compo_testtype" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
       echo "compo_testtype=$compo_testtype" >> $GITHUB_ENV
       echo "compo_testtype=$compo_testtype"

       $compo_list += "["
       echo "compo_list=$compo_list"

       foreach ($comp_info in $compo_testtype) {
          $compo_list += "`""
          $compo_list += $comp_info.Name
          $compo_list += "`""
          $compo_list += ","
       }
       $compo_list += "]"
       $compo_list = $compo_list -replace '\,]',']'

       echo "compo_list=$compo_list" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
       
       $JsonFilePath = ".github/workflows/choices.json"
       $JsonData = Get-Content $JsonFilePath -Raw | ConvertFrom-Json
       foreach ($compo in $compo_list | ConvertFrom-Json ) {
         foreach ($comp_info in $JsonData.PSObject.Properties.Value) {
           $testtype = $comp_info.test_type
         }
         echo "testtype=$testtype"
         # 取得したテスト種別がcsv(csvのみ実施)・gtest(gtestのみ実施)・mix(csvとgtestを実施)に該当しない場合、エラーとする
         if ($testtype -eq 'csv' -or $testtype -eq 'gtest' -or $testtype -eq 'mix') {
           # コンポを格納
           $compolist += "`""
           $compolist += $node_name
           $compolist += "`""
           $compolist += ","
         } else {
           $error_comment="【ERROR】There is an error in the test type : $testtype : compo : $compo ."
           echo "::error::$error_comment"
         }
       }
       $compolist += "]"
       $compolist = $compolist -replace '\,]',']'

       echo "complist=$compolist"
       echo "complist=$complist" | Out-File -Append -FilePath $env:GITHUB_ENV


  Exec_GTestConvTool:
    runs-on: windows-latest
    needs: excelgraph
    strategy:
      max-parallel: 5
      matrix:
        compolist: ${{fromJson(needs.excelgraph.outputs.compo_list)}}
    steps:
    - uses: actions/checkout@v3
    - name: check
      run: |
        pwd
        dir
        cd ./.github
        dir
        cd ./workflows
        dir
        echo "compolist=${{env.complist}}"

  Exec_ECU-Build:
    runs-on: windows-latest
    needs: [excelgraph,Exec_GTestConvTool]
    strategy:
      max-parallel: 2
      matrix:
        compolist: ${{fromJson(needs.excelgraph.outputs.compo_list)}}
    if: always()
    steps:
      - name: Clean self-hosted runner
        run: |
          echo "Exec_ECU-Build"
          echo ${{ matrix.compolist }}
