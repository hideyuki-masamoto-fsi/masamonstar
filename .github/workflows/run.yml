name: form-example

on:
 workflow_dispatch:
  inputs:
   input_node:
    description: 'Input Node Name.'
    required: true
 
    
jobs:
  Exec_ECU-Build:
    env:
      #input_compo: "Mrf"
      input_compo: '["Mrf","Bsm","DestJdg","VehPred"]'
    runs-on: windows-latest
    outputs:
      build_info: ${{ steps.get_build_switching_info.outputs.build_info}}
    steps:
      - uses: actions/checkout@v3
      #・ビルド時にCA/CR切り替える時に必要な情報をjsonファイルから取得
      - name: Get Build Switching info
        id: get_build_switching_info
        run: |
          #CA/CR情報を取得するためのjsonファイル
          pwd
          cd ./.github/workflows

          $JsonFilePath = "choices.json"
          $JsonData = Get-Content $JsonFilePath -Raw | ConvertFrom-Json

          foreach ($cmp_info in $JsonData.PSObject.Properties.Value) {
            if ($cmp_info.node_name -eq "Mrf") {
              $build_info = $cmp_info.core_partition
              Write-Host "$build_info get information"
            }
          }
          echo "build_info=$build_info"
          echo "build_info=$build_info" | Out-File -Append -FilePath $env:GITHUB_OUTPUT

          $input_compo='["Mrf","Bsm","DestJdg","VehPred"]'
          echo "$input_compo=$input_compo"
          
          $target="Mrf"
          $targetcompo = @()

          foreach ($compo in ($input_compo | ConvertFrom-Json)) {
            echo "compo=$compo"
            if ($compo -ne "$target") {
              $test_type = "csv"
              $targetcompo += @( @{Name = $compo; Type = $test_type})
            }
          }
          #$targetcompo = $targetcompo | ConvertTo-Json -Compress
          echo "targetcompo=$targetcompo"
  #値確認
  VALUE-CONFIRM:
    runs-on: windows-latest
    needs: [Exec_ECU-Build]
    name: VALUE-CONFIRM
    steps:
      - name: value_confirm
        run: | 
          pwd
          #変数作成
          $arg1 = "argmenttest"
          $arg2 = "argmenttest2"
          $path = "${arg1}file"
          echo "--- $path ---"
          $path2 =Join-Path $arg1 $arg2
          echo "--- $path2 ---"
          $path3 =Join-Path $path2 "${arg1}テスト結果.csv"
          echo "--- $path3 ---"
          $path4= Join-Path C:/w "$arg2"
          echo "--- $path4 ---"
          #出力確認
          echo "$build_info=${{ needs.Exec_ECU-Build.outputs.build_info }}"
          
    
